{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsalazar/Desktop/test/mediastream-challenge-react/src/components/pages/Exercise02/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/**\n * Exercise 02: Movie Library\n * We are trying to make a movie library for internal users. We are facing some issues by creating this, try to help us following the next steps:\n * !IMPORTANT: Make sure to run yarn movie-api for this exercise\n * 1. We have an issue fetching the list of movies, check why and fix it (handleMovieFetch)\n * 2. Create a filter by fetching the list of gender (http://localhost:3001/genres) and then loading\n * list of movies that belong to that gender (Filter all movies).\n * 3. Order the movies by year and implement a button that switch between ascending and descending order for the list\n * 4. Try to recreate the user interface that comes with the exercise (exercise02.png)\n * \n * You can modify all the code, this component isn't well designed intentionally. You can redesign it as you need.\n */\nimport \"./assets/styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Exercise02() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [fetchCount, setFetchCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const [filterGenre, setFilterGenre] = useState('Comedy');\n  const [orderValue, setOrderValue] = useState('Descending');\n\n  const handleMovieFetch = () => {\n    setLoading(true);\n    fetch('http://localhost:3001/movies?_limit=50').then(res => res.json()).then(json => {\n      setMovies(json);\n      setLoading(false);\n    }).catch(() => {\n      console.log('Run yarn movie-api for fake api');\n    });\n  };\n\n  const orderingMovies = () => {\n    setOrderValue(orderValue === \"Descending\" ? \"Ascending\" : \"Descending\");\n  };\n\n  useEffect(() => {\n    orderValue === 'Ascending' ? setMovies(movies.sort((a, b) => a.year - b.year)) : setMovies(movies.sort((a, b) => b.year - a.year));\n  }, [orderValue]);\n\n  const handleGenresFetch = params => {\n    fetch('http://localhost:3001/genres').then(res => res.json()).then(json => {\n      setGenres(json);\n    }).catch(() => {\n      console.log('Run yarn movie-api for fake api');\n    });\n  };\n\n  useEffect(() => {\n    handleGenresFetch();\n    handleMovieFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movie-library\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movie-library__title\",\n      children: \"Movie Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-library__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genre\",\n        placeholder: \"Search by genre...\",\n        onChange: e => setFilterGenre(e.target.value),\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre,\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: orderingMovies,\n        children: [\"Year  \", orderValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-library__loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fetched \", fetchCount, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-library__list\",\n      children: movies.filter(movie => movie.genres.includes(filterGenre)).map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-library__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.posterUrl,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"ID: \", movie.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Title: \", movie.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Year: \", movie.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Runtime: \", movie.runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Genres: \", movie.genres.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Exercise02, \"4+mXrQ5fOVs6cFQO94DfwYh0oQY=\");\n\n_c = Exercise02;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise02\");","map":{"version":3,"sources":["/Users/kevinsalazar/Desktop/test/mediastream-challenge-react/src/components/pages/Exercise02/index.js"],"names":["useEffect","useState","Exercise02","movies","setMovies","fetchCount","setFetchCount","loading","setLoading","genres","setGenres","filterGenre","setFilterGenre","orderValue","setOrderValue","handleMovieFetch","fetch","then","res","json","catch","console","log","orderingMovies","sort","a","b","year","handleGenresFetch","params","e","target","value","map","genre","filter","movie","includes","posterUrl","title","id","runtime","join"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/**\n * Exercise 02: Movie Library\n * We are trying to make a movie library for internal users. We are facing some issues by creating this, try to help us following the next steps:\n * !IMPORTANT: Make sure to run yarn movie-api for this exercise\n * 1. We have an issue fetching the list of movies, check why and fix it (handleMovieFetch)\n * 2. Create a filter by fetching the list of gender (http://localhost:3001/genres) and then loading\n * list of movies that belong to that gender (Filter all movies).\n * 3. Order the movies by year and implement a button that switch between ascending and descending order for the list\n * 4. Try to recreate the user interface that comes with the exercise (exercise02.png)\n * \n * You can modify all the code, this component isn't well designed intentionally. You can redesign it as you need.\n */\n\nimport \"./assets/styles.css\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Exercise02() {\n  const [movies, setMovies] = useState([])\n  const [fetchCount, setFetchCount] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const [genres, setGenres] = useState([])\n  const [filterGenre, setFilterGenre] = useState('Comedy')\n  const [orderValue, setOrderValue] = useState('Descending')\n\n\n  const handleMovieFetch = () => {\n    setLoading(true)\n    fetch('http://localhost:3001/movies?_limit=50')\n      .then(res => res.json())\n      .then(json => {\n        setMovies(json)\n        setLoading(false)\n      })\n      .catch(() => {\n        console.log('Run yarn movie-api for fake api')\n      })\n  }\n\n  const orderingMovies = () => {\n    setOrderValue(orderValue === \"Descending\" ? \"Ascending\" : \"Descending\")\n  }\n\n  useEffect(() => {\n    orderValue === 'Ascending' ?\n      setMovies(movies.sort((a, b) => a.year - b.year)) :\n      setMovies(movies.sort((a, b) => b.year - a.year))\n  }, [orderValue])\n\n  const handleGenresFetch = (params) => {\n    fetch('http://localhost:3001/genres')\n      .then(res => res.json())\n      .then(json => {\n        setGenres(json)\n      })\n      .catch(() => {\n        console.log('Run yarn movie-api for fake api')\n      })\n  }\n\n  useEffect(() => {\n    handleGenresFetch()\n    handleMovieFetch()\n  }, [])\n\n  return (\n    <section className=\"movie-library\">\n      <h1 className=\"movie-library__title\">\n        Movie Library\n      </h1>\n      <div className=\"movie-library__actions\">\n        <select name=\"genre\" placeholder=\"Search by genre...\" onChange={(e) => setFilterGenre(e.target.value)}>\n          {\n            genres.map(genre => <option value={genre} >{genre}</option>)\n          }\n        </select>\n        <button onClick={orderingMovies}>Year  {orderValue}</button>\n      </div>\n      {loading ? (\n        <div className=\"movie-library__loading\">\n          <p>Loading...</p>\n          <p>Fetched {fetchCount} times</p>\n        </div>\n      ) : (\n        <ul className=\"movie-library__list\">\n          {movies\n            .filter(movie => movie.genres.includes(filterGenre))\n            .map(movie => (\n              <li key={movie.id} className=\"movie-library__card\">\n                <img src={movie.posterUrl} alt={movie.title} />\n                <ul>\n                  <li>ID: {movie.id}</li>\n                  <li>Title: {movie.title}</li>\n                  <li>Year: {movie.year}</li>\n                  <li>Runtime: {movie.runtime}</li>\n                  <li>Genres: {movie.genres.join(', ')}</li>\n                </ul>\n              </li>\n            ))}\n        </ul>\n      )}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}