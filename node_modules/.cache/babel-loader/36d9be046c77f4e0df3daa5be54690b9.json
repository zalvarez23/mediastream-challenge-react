{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsalazar/Desktop/test/mediastream-challenge-react/src/components/pages/Exercise02/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/**\n * Exercise 02: Movie Library\n * We are trying to make a movie library for internal users. We are facing some issues by creating this, try to help us following the next steps:\n * !IMPORTANT: Make sure to run yarn movie-api for this exercise\n * 1. We have an issue fetching the list of movies, check why and fix it (handleMovieFetch)\n * 2. Create a filter by fetching the list of gender (http://localhost:3001/genres) and then loading\n * list of movies that belong to that gender (Filter all movies).\n * 3. Order the movies by year and implement a button that switch between ascending and descending order for the list\n * 4. Try to recreate the user interface that comes with the exercise (exercise02.png)\n * \n * You can modify all the code, this component isn't well designed intentionally. You can redesign it as you need.\n */\nimport \"./assets/styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Exercise02() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [fetchCount, setFetchCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const [filterGenre, setFilterGenre] = useState('Comedy');\n\n  const handleMovieFetch = () => {\n    setLoading(true);\n    fetch('http://localhost:3001/movies?_limit=50').then(res => res.json()).then(json => {\n      setMovies(json);\n      setLoading(false);\n    }).catch(() => {\n      console.log('Run yarn movie-api for fake api');\n    });\n  };\n\n  const handleGenresFetch = params => {\n    fetch('http://localhost:3001/genres').then(res => res.json()).then(json => {\n      setGenres(json);\n    }).catch(() => {\n      console.log('Run yarn movie-api for fake api');\n    });\n  };\n\n  useEffect(() => {\n    handleGenresFetch();\n    handleMovieFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movie-library\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movie-library__title\",\n      children: \"Movie Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-library__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genre\",\n        placeholder: \"Search by genre...\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre,\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Order Descending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-library__loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fetched \", fetchCount, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-library__list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-library__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.posterUrl,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"ID: \", movie.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Title: \", movie.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Year: \", movie.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Runtime: \", movie.runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Genres: \", movie.genres.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Exercise02, \"N/I43S9I6g1J2ig/RRuqulvosmw=\");\n\n_c = Exercise02;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise02\");","map":{"version":3,"sources":["/Users/kevinsalazar/Desktop/test/mediastream-challenge-react/src/components/pages/Exercise02/index.js"],"names":["useEffect","useState","Exercise02","movies","setMovies","fetchCount","setFetchCount","loading","setLoading","genres","setGenres","filterGenre","setFilterGenre","handleMovieFetch","fetch","then","res","json","catch","console","log","handleGenresFetch","params","map","genre","movie","posterUrl","title","id","year","runtime","join"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/**\n * Exercise 02: Movie Library\n * We are trying to make a movie library for internal users. We are facing some issues by creating this, try to help us following the next steps:\n * !IMPORTANT: Make sure to run yarn movie-api for this exercise\n * 1. We have an issue fetching the list of movies, check why and fix it (handleMovieFetch)\n * 2. Create a filter by fetching the list of gender (http://localhost:3001/genres) and then loading\n * list of movies that belong to that gender (Filter all movies).\n * 3. Order the movies by year and implement a button that switch between ascending and descending order for the list\n * 4. Try to recreate the user interface that comes with the exercise (exercise02.png)\n * \n * You can modify all the code, this component isn't well designed intentionally. You can redesign it as you need.\n */\n\nimport \"./assets/styles.css\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Exercise02() {\n  const [movies, setMovies] = useState([])\n  const [fetchCount, setFetchCount] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const [genres, setGenres] = useState([])\n  const [filterGenre, setFilterGenre] = useState('Comedy')\n  \n  const handleMovieFetch = () => {\n    setLoading(true)\n    fetch('http://localhost:3001/movies?_limit=50')\n      .then(res => res.json())\n      .then(json => {\n        setMovies(json)\n        setLoading(false)\n      })\n      .catch(() => {\n        console.log('Run yarn movie-api for fake api')\n      })\n  }\n\n  const handleGenresFetch = (params) => {\n    fetch('http://localhost:3001/genres')\n      .then(res => res.json())\n      .then(json => {\n        setGenres(json)\n      })\n      .catch(() => {\n        console.log('Run yarn movie-api for fake api')\n      })\n  }\n\n  useEffect(() => {\n    handleGenresFetch()\n    handleMovieFetch()\n  }, [])\n\n  return (\n    <section className=\"movie-library\">\n      <h1 className=\"movie-library__title\">\n        Movie Library\n      </h1>\n      <div className=\"movie-library__actions\">\n        <select name=\"genre\" placeholder=\"Search by genre...\">\n          {\n            genres.map(genre => <option value={genre}>{genre}</option>)\n          }\n        </select>\n        <button>Order Descending</button>\n      </div>\n      {loading ? (\n        <div className=\"movie-library__loading\">\n          <p>Loading...</p>\n          <p>Fetched {fetchCount} times</p>\n        </div>\n      ) : (\n        <ul className=\"movie-library__list\">\n          {movies.map(movie => (\n            <li key={movie.id} className=\"movie-library__card\">\n              <img src={movie.posterUrl} alt={movie.title} />\n              <ul>\n                <li>ID: {movie.id}</li>\n                <li>Title: {movie.title}</li>\n                <li>Year: {movie.year}</li>\n                <li>Runtime: {movie.runtime}</li>\n                <li>Genres: {movie.genres.join(', ')}</li>\n              </ul>\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}