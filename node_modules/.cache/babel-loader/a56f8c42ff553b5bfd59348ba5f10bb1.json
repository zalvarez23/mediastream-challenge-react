{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsalazar/Desktop/test/mediastream-challenge-react/src/components/pages/Exercise01/index.js\",\n    _s = $RefreshSig$();\n\n/**\n * Exercise 01: The Retro Movie Store\n * Implement a shopping cart with the next features for the Movie Store that is selling retro dvds:\n * 1. Add a movie to the cart\n * 2. Increment or decrement the quantity of movie copies. If quantity is equal to 0, the movie must be removed from the cart\n * 3. Calculate and show the total cost of your cart. Ex: Total: $150\n * 4. Apply discount rules. You have an array of offers with discounts depending of the combination of movie you have in your cart.\n * You have to apply all discounts in the rules array (discountRules).\n * Ex: If m:Â [1, 2, 3], it means the discount will be applied to the total when the cart has all that products in only.\n * \n * You can modify all the code, this component isn't well designed intentionally. You can redesign it as you need.\n */\nimport './assets/styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Exercise01() {\n  _s();\n\n  const movies = [{\n    id: 1,\n    name: 'Star Wars',\n    price: 20\n  }, {\n    id: 2,\n    name: 'Minions',\n    price: 25\n  }, {\n    id: 3,\n    name: 'Fast and Furious',\n    price: 10\n  }, {\n    id: 4,\n    name: 'The Lord of the Rings',\n    price: 5\n  }];\n  const discountRules = [{\n    m: [3, 2],\n    discount: 0.25\n  }, {\n    m: [2, 4, 1],\n    discount: 0.5\n  }, {\n    m: [4, 2],\n    discount: 0.1\n  }];\n  const [cart, setCart] = useState([{\n    id: 1,\n    name: 'Star Wars',\n    price: 20,\n    quantity: 2\n  }]);\n\n  const getTotal = () => {\n    return cart.reduce((acc, item) => {\n      acc += item.quantity * item.price;\n      return acc;\n    }, 0);\n  }; // TODO: Implement this\n\n\n  const addToCard = o => {\n    const oIndex = cart.findIndex(cart => cart.id === o.id);\n\n    if (oIndex !== -1) {\n      cart[oIndex].quantity += 1;\n      setCart([...cart]);\n    } else {\n      o['quantity'] = 1;\n      setCart([...cart, o]);\n    }\n  };\n\n  const actionsChangeQuantity = (event, o, index) => {\n    event === 'increment' ? o.quantity += 1 : o.quantity -= 1;\n    setCart([...cart.filter(c => c.quantity !== 0)]);\n  };\n\n  const getTotalDiscount = () => {\n    const totalDiscount = discountRules.reduce((acc, rules) => {\n      const newRules = rules.m.map(id => cart.some(cart => cart.id === id));\n      !newRules.includes(false) && (acc += rules.discount);\n      return acc;\n    }, 0);\n    return totalDiscount;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"exercise01\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies__list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies.map((o, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"movies__list-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"ID: \", o.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Name: \", o.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Price: $\", o.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToCard(o),\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies__cart\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cart.map((x, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"movies__cart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"ID: \", x.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Name: \", x.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Price: $\", x.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies__cart-card-quantity\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => actionsChangeQuantity('decrement', x, i),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: x.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => actionsChangeQuantity('increment', x, i),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies__cart-total\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", getTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Discount: $\", getTotalDiscount()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Exercise01, \"Rsw5CWUTF1fXiezB9T/ch7ILWQg=\");\n\n_c = Exercise01;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise01\");","map":{"version":3,"sources":["/Users/kevinsalazar/Desktop/test/mediastream-challenge-react/src/components/pages/Exercise01/index.js"],"names":["useState","Exercise01","movies","id","name","price","discountRules","m","discount","cart","setCart","quantity","getTotal","reduce","acc","item","addToCard","o","oIndex","findIndex","actionsChangeQuantity","event","index","filter","c","getTotalDiscount","totalDiscount","rules","newRules","map","some","includes","i","x"],"mappings":"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","sourcesContent":["/**\n * Exercise 01: The Retro Movie Store\n * Implement a shopping cart with the next features for the Movie Store that is selling retro dvds:\n * 1. Add a movie to the cart\n * 2. Increment or decrement the quantity of movie copies. If quantity is equal to 0, the movie must be removed from the cart\n * 3. Calculate and show the total cost of your cart. Ex: Total: $150\n * 4. Apply discount rules. You have an array of offers with discounts depending of the combination of movie you have in your cart.\n * You have to apply all discounts in the rules array (discountRules).\n * Ex: If m:Â [1, 2, 3], it means the discount will be applied to the total when the cart has all that products in only.\n * \n * You can modify all the code, this component isn't well designed intentionally. You can redesign it as you need.\n */\n\nimport './assets/styles.css'\nimport { useState } from 'react'\n\nexport default function Exercise01() {\n  const movies = [\n    {\n      id: 1,\n      name: 'Star Wars',\n      price: 20\n    },\n    {\n      id: 2,\n      name: 'Minions',\n      price: 25\n    },\n    {\n      id: 3,\n      name: 'Fast and Furious',\n      price: 10\n    },\n    {\n      id: 4,\n      name: 'The Lord of the Rings',\n      price: 5\n    }\n  ]\n\n  const discountRules = [\n    {\n      m: [3, 2],\n      discount: 0.25\n    },\n    {\n      m: [2, 4, 1],\n      discount: 0.5\n    },\n    {\n      m: [4, 2],\n      discount: 0.1\n    }\n  ]\n\n  const [cart, setCart] = useState([\n    {\n      id: 1,\n      name: 'Star Wars',\n      price: 20,\n      quantity: 2\n    }\n  ])\n\n  const getTotal = () => {\n    return cart.reduce((acc, item) => {\n      acc += item.quantity * item.price\n      return acc\n    }, 0)\n  } // TODO: Implement this\n\n  const addToCard = (o) => {\n    const oIndex = cart.findIndex(cart => cart.id === o.id)\n    if (oIndex !== -1) {\n      cart[oIndex].quantity += 1\n      setCart([...cart])\n    } else {\n      o['quantity'] = 1\n      setCart([...cart, o])\n    }\n  }\n\n  const actionsChangeQuantity = (event, o, index) => {\n    event === 'increment' ? o.quantity += 1 : o.quantity -= 1\n    setCart([...cart.filter(c => c.quantity !== 0)])\n  }\n\n  const getTotalDiscount = () => {\n    const totalDiscount = discountRules.reduce((acc, rules) => {\n      const newRules = rules.m.map(id => cart.some(cart => cart.id === id))\n      !newRules.includes(false) && (acc += rules.discount)\n      return acc\n    }, 0)\n    return totalDiscount\n  }\n\n\n  return (\n    <section className=\"exercise01\">\n      <div className=\"movies__list\">\n        <ul>\n          {movies.map((o, i) => (\n            <li key={i} className=\"movies__list-card\">\n              <ul>\n                <li>\n                  ID: {o.id}\n                </li>\n                <li>\n                  Name: {o.name}\n                </li>\n                <li>\n                  Price: ${o.price}\n                </li>\n              </ul>\n              <button onClick={() => addToCard(o)}>\n                Add to cart\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"movies__cart\">\n        <ul>\n          {cart.map((x, i) => (\n            <li key={i} className=\"movies__cart-card\">\n              <ul>\n                <li>\n                  ID: {x.id}\n                </li>\n                <li>\n                  Name: {x.name}\n                </li>\n                <li>\n                  Price: ${x.price}\n                </li>\n              </ul>\n              <div className=\"movies__cart-card-quantity\">\n                <button onClick={() => actionsChangeQuantity('decrement', x, i)}>\n                  -\n                </button>\n                <span>\n                  {x.quantity}\n                </span>\n                <button onClick={() => actionsChangeQuantity('increment', x, i)}>\n                  +\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"movies__cart-total\">\n        <p>Total: ${getTotal()}</p>\n        <p>Total Discount: ${getTotalDiscount()}</p>\n      </div>\n    </section >\n  )\n}"]},"metadata":{},"sourceType":"module"}